读取dmol输出文件的结构和能量脚本
********************************************************************************************************************
提取脚本 dmol_ExtrastSE2.py（生成npy文件）

功能: 输出seed.npy(seedname为当前文件夹名) 和 seedname paths.txt(输出读取文件的绝对地址)。
解释：程序会提取执行路径下,所有以'outmol'结尾的文件,并输出文件内结构和能量信息。
eg:
a= np.load('output.npy',allow pickle=True)
a[0]输出第一个计算文件夹内全部的结构和能量
a[0][0]第一个计算文件夹的第一个结构，
a[0][1]第一个计算文件夹的第一个能量，
a[0][2]第一个计算文件夹的第二个结构，
a[0][3]第一个计算文件夹的第二个能量，
以此类推a[1][0]第二个计算文件夹的第一个结构，a[1][1]第二个计算文件夹的第一个能量，以此类推
单位: 能量 eV
********************************************************************************************************************
合并脚本 dmol_mergenpy.py
文件功能： 合并当前文件夹内所有的npy文件，生成的文件夹名为当前文件夹名。 
注意事项:  需要把所有的npy文件放到一个新的文件夹,同时实现备份。
********************************************************************************************************************
转换脚本 dmol_ytoz.py  (npy文件转换成npz文件）

注意事项：将当前文件内所有的npy文件转换成npz，生成的npz名称与npy类型文件名相同
eg:
a= np.load('output.npz',allow pickle=True)
a['npz'][0]输出第一个计算文件夹内全部的结构和能量，
a['npz'][0][0]第一个计算文件夹的第一个结构，
a['npz'][0][1]第一个计算文件夹的第一个能量。
其余与npy示例相同，只是多了一个key value。
********************************************************************************************************************
###
检查生成文件内容 
1.dmol_readnpy.py
注意事项：需要手动更改查看文件的名称和输出的文件名
data = np.load('merge.npy',allow_pickle=True)  ### 将merge.npy 更改为 seedname.npy
output_file_path = "output_data.txt"  ### 可以自定义输出文件名

2.dmol_readnpz.py
注意事项：输出npz类型文件的key;
          在ytoz.py脚本中，npz的key设置为‘npz’,可通过更改脚本变更key value。
###

the end
********************************************************************************************************************
